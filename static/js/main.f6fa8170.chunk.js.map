{"version":3,"sources":["steps/Step1.js","steps/Step2.js","steps/Step3.js","steps/Result.js","App.js","serviceWorker.js","index.js"],"names":["ObjectiveFunctionInput","props","_React$useState","React","useState","a","b","c","_React$useState2","Object","slicedToArray","state","setState","react_default","createElement","className","Typography","variant","type","name","onChange","e","objectSpread","parseInt","target","value","Button","color","onClick","handleNext","ObjectiveFunctionView","objective","handleEdit","Step1","step","Step1_ObjectiveFunctionInput","Step1_ObjectiveFunctionView","useStyles","makeStyles","constraintSelector","border","borderRadius","position","zIndex","padding","marginRight","marginLeft","& :hover","cursor","ConstraintInput","namedVector","constraint","constant","classes","handleConstraintSelect","console","log","id","document","getElementById","style","background","concat","addConstraint","ConstraintView","_props$constraint","delete","Step2","restrictions","constraints","length","map","index","Step2_ConstraintView","key","deleteConstraint","Step2_ConstraintInput","Step3","optimizationType","handleOptimization","ArrowUpward","ArrowDownward","backgroundColor","Result","isOptimal","result","details","_props$result$solutio","solution","coefficients","optimum","SimpleSimplex","require","App","handleStep1","values","_this","handleEditStep1","handleEditStep2","handleEditStep3","push","splice","handleStep2","handleStep3","calculate","solver","solve","methodName","handleBackButton","prevState","this","Container","Paper","IconButton","ArrowBack","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+UAIMA,UAAyB,SAACC,GAAU,IAAAC,EACZC,IAAMC,SAAS,CACrCC,EAAG,EACHC,EAAG,EACHC,EAAG,IAJ+BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAC/BS,EAD+BH,EAAA,GACxBI,EADwBJ,EAAA,GAMtC,OACIK,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAACE,EAAA,EAAD,CAAYC,QAAQ,MAApB,uBACAJ,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,KAAGC,UAAU,qBAAb,UACAF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,SAAOI,KAAK,OAAOC,KAAK,IACpBJ,UAAU,kBACVK,SAAU,SAACC,GAAD,OAAOT,EAASH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAaN,EAAGkB,SAASF,EAAEG,OAAOC,aAC/DZ,EAAAR,EAAAS,cAAA,KAAGC,UAAU,aAAb,MAEJF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,SAAOI,KAAK,OAAOC,KAAK,IACpBJ,UAAU,kBACVK,SAAU,SAACC,GAAD,OAAOT,EAASH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAaL,EAAGiB,SAASF,EAAEG,OAAOC,aAC/DZ,EAAAR,EAAAS,cAAA,KAAGC,UAAU,aAAb,MAEJF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,SAAOI,KAAK,OAAOC,KAAK,IACpBJ,UAAU,kBACVK,SAAU,SAACC,GAAD,OAAOT,EAASH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAaJ,EAAGgB,SAASF,EAAEG,OAAOC,aAC/DZ,EAAAR,EAAAS,cAAA,KAAGC,UAAU,aAAb,OAIRF,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,aAAaY,MAAM,UAAUC,QAAS,WAAQ3B,EAAM4B,WAAWlB,KAAjF,gBAONmB,EAAwB,SAAC7B,GAC3B,OACIY,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAACE,EAAA,EAAD,CAAYC,QAAQ,MAApB,uBACAJ,EAAAR,EAAAS,cAAA,gBAAQb,EAAM8B,UAAU1B,EAAxB,KAA6BJ,EAAM8B,UAAUzB,EAA7C,KAAkDL,EAAM8B,UAAUxB,EAAlE,MACAM,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,aAAaY,MAAM,UAAUC,QAAS3B,EAAM+B,YAA9D,YAOG,SAASC,EAAMhC,GAC1B,OAAmB,IAAfA,EAAMiC,KACCrB,EAAAR,EAAAS,cAACqB,EAAD,CAAwBN,WAAY5B,EAAM4B,aAE1ChB,EAAAR,EAAAS,cAACsB,EAAD,CAAuBL,UAAW9B,EAAM8B,UAAWC,WAAY/B,EAAM+B,0BCpD9EK,EAAYC,YAAW,CACzBC,mBAAoB,CAChBC,OAAQ,+BACRC,aAAc,EACdC,SAAU,GACVC,OAAQ,GACRC,QAAS,GACTC,YAAa,EACbC,WAAY,EACZC,WAAY,CACRC,OAAQ,cAKdC,EAAkB,SAAChD,GAAU,IAAAC,EACLC,IAAMC,SAAS,CACrC8C,YAAa,CAAE7C,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC9B4C,WAAY,IACZC,SAAU,IAJiB5C,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACxBS,EADwBH,EAAA,GACjBI,EADiBJ,EAAA,GAMzB6C,EAAUhB,EAAU1B,GAEpB2C,EAAyB,SAACjC,GAC5BkC,QAAQC,IAAInC,EAAEG,OAAOiC,IACrBC,SAASC,eAAe,KAAKC,MAAMC,WAAa,QAChDH,SAASC,eAAe,MAAMC,MAAMC,WAAa,QACjDH,SAASC,eAAe,MAAMC,MAAMC,WAAa,QACjCH,SAASC,eAAT,GAAAG,OAA2BzC,EAAEG,OAAOiC,KAC5CG,MAAMC,WAAa,qBAC3BjD,EAASH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAawC,WAAU,GAAAW,OAAKzC,EAAEG,OAAOiC,QAEjD,OACI5C,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAAA,MAAIC,UAAU,eAAeE,QAAQ,MAArC,6BACAJ,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,SAAOI,KAAK,OAAOC,KAAK,IACpBJ,UAAU,kBACVK,SAAU,SAACC,GAAD,OAAOT,EAASH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAauC,YAAYzC,OAAAa,EAAA,EAAAb,CAAA,GAAME,EAAMuC,YAAb,CAA0B7C,EAAGkB,SAASF,EAAEG,OAAOC,eACpGZ,EAAAR,EAAAS,cAAA,KAAGC,UAAU,aAAb,MAEJF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,SAAOI,KAAK,OAAOC,KAAK,IACpBJ,UAAU,kBACVK,SAAU,SAACC,GAAD,OAAOT,EAASH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAauC,YAAYzC,OAAAa,EAAA,EAAAb,CAAA,GAAME,EAAMuC,YAAb,CAA0B5C,EAAGiB,SAASF,EAAEG,OAAOC,eACpGZ,EAAAR,EAAAS,cAAA,KAAGC,UAAU,aAAb,MAEJF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,SAAOI,KAAK,OAAOC,KAAK,IACpBJ,UAAU,kBACVK,SAAU,SAACC,GAAD,OAAOT,EAASH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAauC,YAAYzC,OAAAa,EAAA,EAAAb,CAAA,GAAME,EAAMuC,YAAb,CAA0B3C,EAAGgB,SAASF,EAAEG,OAAOC,eACpGZ,EAAAR,EAAAS,cAAA,KAAGC,UAAU,aAAb,MAEJF,EAAAR,EAAAS,cAAA,OACIC,UAAWsC,EAAQd,mBACnBkB,GAAG,KACH7B,QAAS0B,GACTzC,EAAAR,EAAAS,cAAA,QAAM2C,GAAG,KAAK1C,UAAU,kBAAxB,SAEJF,EAAAR,EAAAS,cAAA,OACIC,UAAWsC,EAAQd,mBACnBkB,GAAG,IACH7B,QAAS0B,GACTzC,EAAAR,EAAAS,cAAA,QAAM2C,GAAG,IAAI1C,UAAU,kBAAvB,QAEJF,EAAAR,EAAAS,cAAA,OACIC,UAAWsC,EAAQd,mBACnBkB,GAAG,KACH7B,QAAS0B,GACTzC,EAAAR,EAAAS,cAAA,QAAM2C,GAAG,KAAK1C,UAAU,kBAAxB,eAEJF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,qBACXF,EAAAR,EAAAS,cAAA,SAAOI,KAAK,OAAOC,KAAK,WACpBJ,UAAU,kBACVK,SAAU,SAACC,GAAD,OAAOT,EAASH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAayC,SAAU7B,SAASF,EAAEG,OAAOC,cAE1EZ,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,aAAaY,MAAM,YAAYC,QAAS,kBAAM3B,EAAM8D,cAAcpD,KAApF,YAIJE,EAAAR,EAAAS,cAAA,OAAKC,UAAU,6BAOrBiD,EAAiB,SAAC/D,GAAU,IAAAgE,EACgBhE,EAAMkD,WAA5CD,EADsBe,EACtBf,YAAaC,EADSc,EACTd,WAAYC,EADHa,EACGb,SACjC,OACIvC,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAAA,OAAKC,UAAU,2BACXF,EAAAR,EAAAS,cAAA,SAAIoC,EAAY7C,EAAhB,KAAqB6C,EAAY5C,EAAjC,KAAsC4C,EAAY3C,EAAlD,KAAuD4C,EAAvD,IAAoEC,GACpEvC,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,aAAaY,MAAM,YAAYC,QAAS3B,EAAMiE,QAAhE,eAQD,SAASC,EAAMlE,GAAO,IACzBiC,EAASjC,EAATiC,KACJkC,EAAe,KAMnB,OALInE,EAAMoE,YAAYC,OAAS,IAC3BF,EAAenE,EAAMoE,YAAYE,IAAI,SAACpB,EAAYqB,GAC9C,OAAO3D,EAAAR,EAAAS,cAAC2D,EAAD,CAAgBC,IAAKF,EAAON,OAAQ,kBAAMjE,EAAM0E,iBAAiBH,IAAQrB,WAAYA,OAIhGtC,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAACE,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBACCmD,EACS,IAATlC,EAAarB,EAAAR,EAAAS,cAAC8D,EAAD,CAAiB/C,WAAY5B,EAAM4B,WAAYkC,cAAe9D,EAAM8D,gBAAoB,KAC5F,IAAT7B,EAAarB,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,aAAaY,MAAM,UAAUC,QAAS3B,EAAM4B,YAA9D,eAAkG,KACtG,IAATK,EAAcrB,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,aAAaY,MAAM,UAAUC,QAAS3B,EAAM+B,YAA9D,YAA+F,4BCrH3G,SAAS6C,EAAM5E,GAAO,IAC1BiC,EAA0BjC,EAA1BiC,KAAM4C,EAAoB7E,EAApB6E,iBADoB5E,EAEPC,IAAMC,SAAS,CACrC0E,iBAAkB,QAHWtE,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAE1BS,EAF0BH,EAAA,GAEnBI,EAFmBJ,EAAA,GAK3BuE,EAAqB,SAAC1D,GACxBqC,SAASC,eAAe,OAAOC,MAAMC,WAAa,QAClDH,SAASC,eAAe,OAAOC,MAAMC,WAAa,QAClDH,SAASC,eAAetC,EAAEG,OAAOiC,IAAIG,MAAMC,WAAa,qBACxDjD,EAAS,CAACkE,iBAAkBzD,EAAEG,OAAOiC,MAEzC,OAAa,IAATvB,EAEIrB,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAACE,EAAA,EAAD,CAAYC,QAAQ,MAApB,2BACAJ,EAAAR,EAAAS,cAAA,OAAKC,UAAU,0BACXF,EAAAR,EAAAS,cAAA,OACIC,UAAU,mBACV0C,GAAG,MACH7B,QAASmD,GAHb,IAIElE,EAAAR,EAAAS,cAACkE,EAAA,EAAD,CAAavB,GAAG,QAJlB,IAI0B5C,EAAAR,EAAAS,cAAA,KAAG2C,GAAG,OAAN,cAC1B5C,EAAAR,EAAAS,cAAA,OACIC,UAAU,mBACV0C,GAAG,MACH7B,QAASmD,GAHb,IAIElE,EAAAR,EAAAS,cAACmE,EAAA,EAAD,CAAexB,GAAG,QAJpB,IAI4B5C,EAAAR,EAAAS,cAAA,KAAG2C,GAAG,OAAN,eAEhC5C,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,aAAaY,MAAM,UAAUC,QAAS,kBAAI3B,EAAM4B,WAAWlB,EAAMmE,oBAAnF,cAMC,IAAT5C,EAEIrB,EAAAR,EAAAS,cAAA,OAAKC,UAAU,mBACXF,EAAAR,EAAAS,cAACE,EAAA,EAAD,CAAYC,QAAQ,MAApB,2BACAJ,EAAAR,EAAAS,cAAA,OAAKC,UAAU,0BAEU,QAArB+D,EACAjE,EAAAR,EAAAS,cAAA,OACIC,UAAU,mBACV0C,GAAG,MACHG,MAAO,CAAEsB,gBAAiB,sBAC1BtD,QAASmD,GAJb,IAKElE,EAAAR,EAAAS,cAACkE,EAAA,EAAD,CAAavB,GAAG,QALlB,IAK2B5C,EAAAR,EAAAS,cAAA,KAAG2C,GAAG,OAAN,cAE3B5C,EAAAR,EAAAS,cAAA,OACIC,UAAU,mBACV6C,MAAO,CAAEsB,gBAAiB,sBAC1BzB,GAAG,MACH7B,QAASmD,GAJb,IAKElE,EAAAR,EAAAS,cAACmE,EAAA,EAAD,CAAexB,GAAG,QALpB,IAK6B5C,EAAAR,EAAAS,cAAA,KAAG2C,GAAG,OAAN,eAGjC5C,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,aAAaY,MAAM,UAAUC,QAAS3B,EAAM+B,YAA9D,gBAtBZ,ECpCW,SAASmD,EAAOlF,GAAO,IAC1BmF,EAAcnF,EAAMoF,OAAOC,QAA3BF,UAD0BG,EAEAtF,EAAMoF,OAAOG,SAAvCC,EAF0BF,EAE1BE,aAAcC,EAFYH,EAEZG,QACtB,OAAIN,EAEIvE,EAAAR,EAAAS,cAAA,WACID,EAAAR,EAAAS,cAAA,qDACAD,EAAAR,EAAAS,cAAA,6BACAD,EAAAR,EAAAS,cAAA,iBAAS2E,EAAapF,EAAtB,KACAQ,EAAAR,EAAAS,cAAA,iBAAS2E,EAAanF,EAAtB,KACAO,EAAAR,EAAAS,cAAA,iBAAS2E,EAAalF,EAAtB,KACAM,EAAAR,EAAAS,cAAA,2CACAD,EAAAR,EAAAS,cAAA,aAAK4E,EAAL,MAKJ7E,EAAAR,EAAAS,cAAA,WACID,EAAAR,EAAAS,cAAA,yGCXV6E,EAAgBC,EAAQ,KA+IfC,6MA5IblF,MAAQ,CACNuB,KAAM,EACNH,UAAW,CACT1B,EAAG,EACHC,EAAG,EACHC,EAAG,GAEL8D,YAAa,GACbS,iBAAkB,SAGpBgB,YAAc,SAACC,GACbC,EAAKpF,SAAS,CACVsB,KAAM,EACNH,UAAWgE,IAEfxC,QAAQC,IAAI,QAASwC,EAAKrF,UAE5BsF,gBAAkB,WAChBD,EAAKpF,SAAS,CAAEsB,KAAM,OAExBgE,gBAAkB,WAChBF,EAAKpF,SAAS,CAAEsB,KAAM,OAExBiE,gBAAkB,WAChBH,EAAKpF,SAAS,CAAEsB,KAAM,OAExB6B,cAAgB,SAACgC,GACf,IAAI1B,EAAc2B,EAAKrF,MAAM0D,YAC7BA,EAAY+B,KAAKL,GACjBC,EAAKpF,SAAS,CAAEyD,mBAElBM,iBAAmB,SAACH,GAClB,IAAIH,EAAc2B,EAAKrF,MAAM0D,YAC7BA,EAAYgC,OAAO7B,EAAO,GAC1BwB,EAAKpF,SAAS,CAAEyD,mBAElBiC,YAAc,WACZN,EAAKpF,SAAS,CACZsB,KAAM,OAGVqE,YAAc,SAACzB,GACbkB,EAAKpF,SAAS,CAACkE,mBAAkB5C,KAAM,OAEzCsE,UAAY,WACV,IAAMC,EAAS,IAAId,EAAc,CAC/B5D,UAAWiE,EAAKrF,MAAMoB,UACtBsC,YAAa2B,EAAKrF,MAAM0D,YACxBS,iBAAkBkB,EAAKrF,MAAMmE,mBAE/BkB,EAAKX,OAASoB,EAAOC,MAAM,CAACC,WAAY,YACxCpD,QAAQC,IAAI,UAAWwC,EAAKX,QAC5BW,EAAKpF,SAAS,CAAEyE,OAAQW,EAAKX,OAAQnD,KAAM,OAE7C0E,iBAAmB,WACjBZ,EAAKpF,SAAS,SAACiG,GAAD,MAAgB,CAC5B3E,KAAM2E,EAAU3E,KAAO,QAG3BA,KAAO,WACL,OAAQ8D,EAAKrF,MAAMuB,MAClB,KAAK,EACH,OACErB,EAAAR,EAAAS,cAACmB,EAAD,CACEJ,WAAYmE,EAAKF,YACjB9D,WAAYgE,EAAKC,gBACjBlE,UAAWiE,EAAKrF,MAAMoB,UACtBG,KAAM8D,EAAKrF,MAAMuB,OAGvB,KAAK,EACH,OACErB,EAAAR,EAAAS,cAACqD,EAAD,CACEJ,cAAeiC,EAAKjC,cACpB/B,WAAYgE,EAAKC,gBACjB/D,KAAM8D,EAAKrF,MAAMuB,KACjBmC,YAAa2B,EAAKrF,MAAM0D,YACxBM,iBAAkBqB,EAAKrB,iBACvB9C,WAAYmE,EAAKM,cAGvB,KAAK,EACH,OACEzF,EAAAR,EAAAS,cAAC+D,EAAD,CACE3C,KAAM8D,EAAKrF,MAAMuB,KACjB4C,iBAAkBkB,EAAKrF,MAAMmE,iBAC7BjD,WAAYmE,EAAKO,cAGvB,KAAK,EACH,OACE1F,EAAAR,EAAAS,cAAA,OAAKC,UAAU,kBACbF,EAAAR,EAAAS,cAAA,+BACAD,EAAAR,EAAAS,cAACmB,EAAD,CACEJ,WAAYmE,EAAKF,YACjB9D,WAAYgE,EAAKC,gBACjBlE,UAAWiE,EAAKrF,MAAMoB,UACtBG,KAAM8D,EAAKrF,MAAMuB,OAEnBrB,EAAAR,EAAAS,cAACqD,EAAD,CACEJ,cAAeiC,EAAKjC,cACpB/B,WAAYgE,EAAKE,gBACjBhE,KAAM8D,EAAKrF,MAAMuB,KACjBmC,YAAa2B,EAAKrF,MAAM0D,YACxBM,iBAAkBqB,EAAKrB,iBACvB9C,WAAYmE,EAAKM,cAEnBzF,EAAAR,EAAAS,cAAC+D,EAAD,CACE3C,KAAM8D,EAAKrF,MAAMuB,KACjBF,WAAYgE,EAAKG,gBACjBtE,WAAYmE,EAAKO,YACjBzB,iBAAkBkB,EAAKrF,MAAMmE,mBAE/BjE,EAAAR,EAAAS,cAACY,EAAA,EAAD,CAAQX,UAAU,kBAAkBY,MAAM,YAAYC,QAASoE,EAAKQ,WAApE,aAKL,KAAK,EACH,OAAO3F,EAAAR,EAAAS,cAACqE,EAAD,CAAQE,OAAQW,EAAKX,mFAM1B,IACEnD,EAAS4E,KAAKnG,MAAduB,KACN,OACErB,EAAAR,EAAAS,cAACiG,EAAA,EAAD,CAAWhG,UAAU,iBACnBF,EAAAR,EAAAS,cAAA,mCACAD,EAAAR,EAAAS,cAACkG,EAAA,EAAD,CAAOjG,UAAU,aACL,IAATmB,EAAarB,EAAAR,EAAAS,cAACmG,EAAA,EAAD,CAAYrF,QAASkF,KAAKF,kBAA1B,IAA8C/F,EAAAR,EAAAS,cAACoG,EAAA,EAAD,MAA9C,KAA4E,KAC1FJ,KAAK5E,KAAK4E,KAAKnG,MAAMuB,eAtIf/B,IAAMgH,WCCJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7G,EAAAR,EAAAS,cAAC6G,EAAD,MAASjE,SAASC,eAAe,SD2H3C,kBAAmBiE,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f6fa8170.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\nimport './steps.css'\n\nconst ObjectiveFunctionInput = (props) => {\n    const [state, setState] = React.useState({\n        a: 0,\n        b: 0,\n        c: 0\n    })\n    return (\n        <div className='steps-container'>\n            <Typography variant='h6'> Funcion objetivo: </Typography>\n            <div className='functionContainer'>\n                <p className='objectiveFunction'> Z =  </p>\n                <div className='variableContainer'>\n                    <input type=\"text\" name='a'\n                        className='coeficientInput'\n                        onChange={(e) => setState({ ...state, a: parseInt(e.target.value)})} />\n                    <p className='variables' >A</p>\n                </div>\n                <div className='variableContainer'>\n                    <input type=\"text\" name='b'\n                        className='coeficientInput'\n                        onChange={(e) => setState({ ...state, b: parseInt(e.target.value)})} />\n                    <p className='variables' >B</p>\n                </div>\n                <div className='variableContainer'>\n                    <input type=\"text\" name='c'\n                        className='coeficientInput'\n                        onChange={(e) => setState({ ...state, c: parseInt(e.target.value)})} />\n                    <p className='variables' >C</p>\n                </div>\n\n            </div>\n            <Button className='buttonNext' color=\"primary\" onClick={() => { props.handleNext(state) }} >\n                Continuar\n            </Button>\n        </div>\n    )\n}\n\nconst ObjectiveFunctionView = (props) => {\n    return(\n        <div className='objectiveFunction'>\n            <Typography variant='h6'> Funcion objetivo: </Typography>\n            <p>Z = {props.objective.a}A {props.objective.b}B {props.objective.c}C </p>\n            <Button className='buttonNext' color=\"primary\" onClick={props.handleEdit} >\n                Editar\n            </Button>\n        </div>\n    )\n}\n\nexport default function Step1(props) {\n    if (props.step === 1) {\n        return(<ObjectiveFunctionInput handleNext={props.handleNext} />)\n    } else{\n        return(<ObjectiveFunctionView objective={props.objective} handleEdit={props.handleEdit} />)\n    }\n}\n","import React from 'react'\nimport { Button, Typography, IconButton } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/styles'\nimport './steps.css'\n\nconst useStyles = makeStyles({\n    constraintSelector: {\n        border: '1px solid rgb(105, 169, 224)',\n        borderRadius: 3,\n        position: '',\n        zIndex: 10,\n        padding: 10,\n        marginRight: 5,\n        marginLeft: 5, \n        '& :hover': {\n            cursor: 'pointer'\n        },\n    }\n})\n\nconst ConstraintInput = (props) => {\n    const [state, setState] = React.useState({\n        namedVector: { a: 0, b: 0, c: 0 },\n        constraint: '=',\n        constant: 0\n    })\n    const classes = useStyles(state)\n\n    const handleConstraintSelect = (e) => {\n        console.log(e.target.id)\n        document.getElementById('=').style.background = 'white'\n        document.getElementById('>=').style.background = 'white'\n        document.getElementById('<=').style.background = 'white'\n        const element = document.getElementById(`${e.target.id}`)\n        element.style.background = 'rgb(105, 169, 224)'\n        setState({ ...state, constraint: `${e.target.id}` })\n    }\n    return (\n        <div className='step2-container'>\n            <h3 className='stepSubtitle' variant='h6'> Agregar restricción: </h3>\n            <div className='functionContainer'>\n                <div className='variableContainer'>\n                    <input type=\"text\" name='a'\n                        className='coeficientInput'\n                        onChange={(e) => setState({ ...state, namedVector: { ...state.namedVector, a: parseInt(e.target.value)} })} />\n                    <p className='variables' >A</p>\n                </div>\n                <div className='variableContainer'>\n                    <input type=\"text\" name='b'\n                        className='coeficientInput'\n                        onChange={(e) => setState({ ...state, namedVector: { ...state.namedVector, b: parseInt(e.target.value)} })} />\n                    <p className='variables' >B</p>\n                </div>\n                <div className='variableContainer'>\n                    <input type=\"text\" name='c'\n                        className='coeficientInput'\n                        onChange={(e) => setState({ ...state, namedVector: { ...state.namedVector, c: parseInt(e.target.value)} })} />\n                    <p className='variables' >C</p>\n                </div>\n                <div \n                    className={classes.constraintSelector} \n                    id='>='\n                    onClick={handleConstraintSelect}>\n                    <span id='>=' className='constraintText'> >= </span>\n                </div>\n                <div \n                    className={classes.constraintSelector} \n                    id='='\n                    onClick={handleConstraintSelect}>\n                    <span id='=' className='constraintText'> = </span>\n                </div>\n                <div \n                    className={classes.constraintSelector} \n                    id='<='\n                    onClick={handleConstraintSelect}>\n                    <span id='<=' className='constraintText'> {`<=`} </span>\n                </div>\n                <div className='variableContainer'>\n                    <input type=\"text\" name='constant'\n                        className='coeficientInput'\n                        onChange={(e) => setState({ ...state, constant: parseInt(e.target.value) })} />\n                </div>\n                <Button className='buttonNext' color=\"secondary\" onClick={() => props.addConstraint(state)} >\n                    Agregar\n                </Button>\n            </div>\n            <div className='inlineButtonsContainer'>\n                \n            </div>\n        </div>\n    )\n}\n\nconst ConstraintView = (props) => {\n    const { namedVector, constraint, constant } = props.constraint\n    return (\n        <div className='steps-container'>\n            <div className='constraintViewContainer'>\n                <p>{namedVector.a}A {namedVector.b}B {namedVector.c}C {constraint} {constant}</p>\n                <Button className='buttonNext' color=\"secondary\" onClick={props.delete} >\n                    Eliminar\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default function Step2(props) {\n    const { step } = props\n    var restrictions = null;\n    if (props.constraints.length > 0) {\n        restrictions = props.constraints.map((constraint, index) => {\n            return <ConstraintView key={index} delete={() => props.deleteConstraint(index)} constraint={constraint} />\n        })\n    }\n    return(\n        <div className='steps-container'>\n            <Typography variant='h6'> Restricciones: </Typography>\n            {restrictions}\n            {step === 2 ? <ConstraintInput handleNext={props.handleNext} addConstraint={props.addConstraint} /> : null}\n            {step === 2 ? <Button className='buttonNext' color=\"primary\" onClick={props.handleNext} > Continuar </Button> : null }\n            {step === 4 ? (<Button className='buttonNext' color='primary' onClick={props.handleEdit}> Editar </Button>) : null}\n        </div>\n    )   \n\n}\n","import React from 'react'\nimport { Typography, Button } from '@material-ui/core';\nimport { ArrowUpward, ArrowDownward } from '@material-ui/icons'\n\n\nexport default function Step3(props) {\n    const {step, optimizationType} = props\n    const [state, setState] = React.useState({\n        optimizationType: 'max'\n    })\n    const handleOptimization = (e) =>{\n        document.getElementById('min').style.background = 'white';\n        document.getElementById('max').style.background = 'white';\n        document.getElementById(e.target.id).style.background = 'rgb(105, 169, 224)'\n        setState({optimizationType: e.target.id})\n    }\n    if (step === 3) {\n        return (\n            <div className='steps-container'>\n                <Typography variant='h6'> Tipo de optimizacion: </Typography>\n                <div className='optimization-container'>\n                    <div \n                        className='optmization-type'\n                        id='max'\n                        onClick={handleOptimization}\n                    > <ArrowUpward id='max'/> <p id='max'>Maximizar</p></div>\n                    <div \n                        className='optmization-type'\n                        id='min'\n                        onClick={handleOptimization}\n                    > <ArrowDownward id='min'/> <p id='min'>Minimizar</p></div>\n                </div>\n                <Button className='buttonNext' color=\"primary\" onClick={()=>props.handleNext(state.optimizationType)} >\n                    Continuar\n                </Button>\n            </div>\n        )\n    }\n    if (step === 4) {\n        return (\n            <div className='steps-container'>\n                <Typography variant='h6'> Tipo de optimizacion: </Typography>\n                <div className='optimization-container'>\n                { \n                    optimizationType === 'max' ?  \n                    <div\n                        className='optmization-type'\n                        id='max'\n                        style={{ backgroundColor: 'rgb(105, 169, 224)' }}\n                        onClick={handleOptimization}\n                    > <ArrowUpward id='max' /> <p id='max'>Maximizar</p></div>\n                    :\n                    <div\n                        className='optmization-type'\n                        style={{ backgroundColor: 'rgb(105, 169, 224)' }}\n                        id='min'\n                        onClick={handleOptimization}\n                    > <ArrowDownward id='min' /> <p id='min'>Minimizar</p></div>\n                }\n                </div>\n                <Button className='buttonNext' color=\"primary\" onClick={props.handleEdit} >\n                    Editar\n                </Button>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default function Result(props) {\n    const { isOptimal } = props.result.details;\n    const { coefficients, optimum } = props.result.solution;\n    if (isOptimal) {\n        return (\n            <div>\n                <h3> Se ha encontrado una solucion optima! </h3>\n                <h4> Coeficientes: </h4>\n                <p> A = {coefficients.a} </p> \n                <p> B = {coefficients.b} </p> \n                <p> C = {coefficients.c} </p>\n                <h4> Valor optimo de la funcion: </h4> \n                <p> {optimum} </p>\n            </div>\n        )\n    } else {\n        return(\n            <div>\n                <h3> No se ha encontrado solucion optima 😢 </h3>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Step1 from './steps/Step1';\nimport Step2 from './steps/Step2';\nimport Step3 from './steps/Step3';\nimport Result from './steps/Result';\nimport { Button, Paper, Container, IconButton } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons'\n// import SimpleSimplex  from './lib/index'\nconst SimpleSimplex = require('simple-simplex')\n\nclass App extends React.Component{\n  state = {\n    step: 1,\n    objective: {\n      a: 0,\n      b: 0,\n      c: 0,\n    },\n    constraints: [],\n    optimizationType: 'max',\n  }\n\n  handleStep1 = (values) => {\n    this.setState({ \n        step: 2,\n        objective: values\n      })\n    console.log('state', this.state)\n  }\n  handleEditStep1 = () => {\n    this.setState({ step: 1 })\n  }\n  handleEditStep2 = () => {\n    this.setState({ step: 2 })\n  }\n  handleEditStep3 = () => {\n    this.setState({ step: 3 })\n  }\n  addConstraint = (values) => {\n    let constraints = this.state.constraints;\n    constraints.push(values)\n    this.setState({ constraints })\n  }\n  deleteConstraint = (index) => {\n    let constraints = this.state.constraints;\n    constraints.splice(index, 1);\n    this.setState({ constraints })\n  }\n  handleStep2 = () => {\n    this.setState({\n      step: 3\n    })\n  }\n  handleStep3 = (optimizationType) => {\n    this.setState({optimizationType, step: 4})\n  }\n  calculate = () => {\n    const solver = new SimpleSimplex({\n      objective: this.state.objective,\n      constraints: this.state.constraints,\n      optimizationType: this.state.optimizationType \n    });\n    this.result = solver.solve({methodName: 'simplex'});\n    console.log('result:', this.result);\n    this.setState({ result: this.result, step: 5 })\n  }\n  handleBackButton = () => {\n    this.setState((prevState) => ({\n      step: prevState.step - 1\n    }))\n  }\n  step = () => {\n    switch (this.state.step) {\n     case 1:\n       return (\n         <Step1\n           handleNext={this.handleStep1}\n           handleEdit={this.handleEditStep1}\n           objective={this.state.objective}\n           step={this.state.step}\n         />\n       )\n     case 2:\n       return (\n         <Step2\n           addConstraint={this.addConstraint}\n           handleEdit={this.handleEditStep1}\n           step={this.state.step}\n           constraints={this.state.constraints}\n           deleteConstraint={this.deleteConstraint}\n           handleNext={this.handleStep2}\n         />\n       )\n     case 3:\n       return (\n         <Step3\n           step={this.state.step}\n           optimizationType={this.state.optimizationType}\n           handleNext={this.handleStep3}\n         />\n       )\n     case 4:\n       return (\n         <div className='step4Container'>\n           <h2> Datos cargados: </h2>\n           <Step1\n             handleNext={this.handleStep1}\n             handleEdit={this.handleEditStep1}\n             objective={this.state.objective}\n             step={this.state.step}\n           />\n           <Step2\n             addConstraint={this.addConstraint}\n             handleEdit={this.handleEditStep2}\n             step={this.state.step}\n             constraints={this.state.constraints}\n             deleteConstraint={this.deleteConstraint}\n             handleNext={this.handleStep2}\n             />\n           <Step3\n             step={this.state.step}\n             handleEdit={this.handleEditStep3}\n             handleNext={this.handleStep3}\n             optimizationType={this.state.optimizationType}\n           />\n           <Button className='calculateButton' color='secondary' onClick={this.calculate}>\n             Calcular\n           </Button>\n         </div>\n       )\n      case 5 :\n        return <Result result={this.result} />\n     default:\n       break;\n   }\n\n  }\n  render(){\n      let { step } = this.state\n      return (\n        <Container className='app-container'>\n          <h1> Calculadora simplex </h1>\n          <Paper className=\"app-paper\">\n            {step !== 1 ? <IconButton onClick={this.handleBackButton} > <ArrowBack /> </IconButton> : null }\n           {this.step(this.state.step)}\n          </Paper>\n        </Container>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}